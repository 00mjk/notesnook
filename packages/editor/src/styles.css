.ProseMirror p.is-editor-empty:first-child::before {
  color: var(--placeholder);
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror code:not(pre code) {
  background-color: var(--bgSecondary);
}

.ProseMirror code:not(pre code) {
  background-color: var(--bgSecondary);
  border: 1px solid var(--border);
  border-radius: 5px;
  padding: 3px 5px 0px 5px;
  font-family: ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono,
    Menlo, monospace !important;
  font-size: 10pt !important;
}

.ProseMirror li p {
  margin: 0px;
}

.ProseMirror li {
  margin-bottom: 5px;
}

.ProseMirror a {
  color: var(--primary);
  cursor: pointer;
}

.ProseMirror a:hover {
  filter: brightness(70%);
}

.ProseMirror {
  position: relative;
}
.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}
.ProseMirror [contenteditable="false"] {
  white-space: normal;
}
.ProseMirror [contenteditable="false"] [contenteditable="true"] {
  white-space: pre-wrap;
}
.ProseMirror pre {
  white-space: pre-wrap;
}
img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
  width: 1px !important;
  height: 1px !important;
}
.ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
  margin: 0;
}
.ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  width: 20px;
  border-top: 1px solid var(--text);
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}
@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}
.ProseMirror-hideselection *::selection {
  background: transparent;
  color: var(--text);
}
.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
  color: var(--text);
}
.ProseMirror-hideselection * {
  caret-color: transparent;
}
.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}
.tippy-box[data-animation="fade"][data-state="hidden"] {
  opacity: 0;
}

.ProseMirror li.node-taskItem {
  list-style-type: none;
}

.ProseMirror table {
  border-collapse: collapse;
  margin: 0;
  overflow: hidden;
  table-layout: fixed;
}

.ProseMirror table td,
.ProseMirror table th {
  border: 1px solid var(--border);
  box-sizing: border-box;
  min-width: 1em;
  padding: 3px 5px;
  position: relative;
  vertical-align: top;
}

.ProseMirror table td > *,
.ProseMirror table th > * {
  margin-bottom: 0;
}

.ProseMirror table th {
  background-color: var(--bgSecondary);
  font-weight: bold;
  text-align: left;
}

.ProseMirror table .selectedCell:after {
  background: var(--primary);
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  position: absolute;
  z-index: 2;
  opacity: 0.2;
}

.ProseMirror table .column-resize-handle {
  background-color: var(--primary);
  bottom: -2px;
  position: absolute;
  right: -2px;
  pointer-events: none;
  top: 0;
  width: 5px;
}

.ProseMirror table p {
  margin: 0;
}

.tableWrapper {
  padding: 1rem 0;
  overflow-x: auto;
}

.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

.drop-cursor {
  background-color: var(--text) !important;
}

.search-result {
  background-color: var(--disabled);
}

.line-number-widget,
.line-number::before {
  color: var(--codeFg);
  pointer-events: none;
  border-right: 1px solid currentColor;
  margin-right: 10px;
  padding-right: 10px;
}

.line-number::before {
  content: attr(data-line);
}

.line-number.active::before,
.line-number-widget.active {
  color: var(--codeHighlight);
}

.line-number.active:after,
.line-number-widget.active:after {
  content: " ";
  width: 100%;
  position: absolute;
  left: 0;
  pointer-events: none;
  background-color: var(--overlay);
}

pre::selection,
pre *::selection {
  background-color: var(--codeSelection) !important;
  color: currentColor;
}
