import React from "react";
import { ToolProps } from "../types";
import { Bold, Italic, Underline, Strikethrough, Code, Subscript, Superscript, ClearFormatting, CodeRemove, Math } from "./inline";
import { InsertBlock } from "./block";
import { FontSize, FontFamily } from "./font";
import { Alignment } from "./alignment";
import { Headings } from "./headings";
import { NumberedList, BulletList } from "./lists";
import { TextDirection } from "./text-direction";
import { Highlight, TextColor } from "./colors";
import { TableSettings, ColumnProperties, RowProperties, CellProperties, CellBackgroundColor, CellBorderColor, CellTextColor, CellBorderWidth } from "./table";
import { ImageSettings, ImageAlignCenter, ImageAlignLeft, ImageAlignRight, ImageProperties } from "./image";
import { AttachmentSettings, DownloadAttachment, RemoveAttachment } from "./attachment";
import { EmbedAlignCenter, EmbedAlignLeft, EmbedAlignRight, EmbedProperties, EmbedSettings } from "./embed";
import { AddLink, EditLink, RemoveLink, LinkSettings, OpenLink } from "./link";
export declare type ToolId = keyof typeof tools;
declare const tools: {
    bold: typeof Bold;
    italic: typeof Italic;
    underline: typeof Underline;
    strikethrough: typeof Strikethrough;
    code: typeof Code;
    codeRemove: typeof CodeRemove;
    subscript: typeof Subscript;
    superscript: typeof Superscript;
    clearformatting: typeof ClearFormatting;
    addLink: typeof AddLink;
    editLink: typeof EditLink;
    removeLink: typeof RemoveLink;
    linkSettings: typeof LinkSettings;
    openLink: typeof OpenLink;
    insertBlock: typeof InsertBlock;
    numberedList: typeof NumberedList;
    bulletList: typeof BulletList;
    fontSize: typeof FontSize;
    fontFamily: typeof FontFamily;
    headings: typeof Headings;
    alignment: typeof Alignment;
    textDirection: typeof TextDirection;
    textColor: typeof TextColor;
    highlight: typeof Highlight;
    math: typeof Math;
    imageSettings: typeof ImageSettings;
    imageAlignCenter: typeof ImageAlignCenter;
    imageAlignLeft: typeof ImageAlignLeft;
    imageAlignRight: typeof ImageAlignRight;
    imageProperties: typeof ImageProperties;
    embedAlignCenter: typeof EmbedAlignCenter;
    embedAlignLeft: typeof EmbedAlignLeft;
    embedAlignRight: typeof EmbedAlignRight;
    embedProperties: typeof EmbedProperties;
    embedSettings: typeof EmbedSettings;
    attachmentSettings: typeof AttachmentSettings;
    downloadAttachment: typeof DownloadAttachment;
    removeAttachment: typeof RemoveAttachment;
    tableSettings: typeof TableSettings;
    columnProperties: typeof ColumnProperties;
    rowProperties: typeof RowProperties;
    cellProperties: typeof CellProperties;
    insertColumnLeft: (props: ToolProps) => JSX.Element;
    insertColumnRight: (props: ToolProps) => JSX.Element;
    moveColumnLeft: (props: ToolProps) => JSX.Element;
    moveColumnRight: (props: ToolProps) => JSX.Element;
    deleteColumn: (props: ToolProps) => JSX.Element;
    splitCells: (props: ToolProps) => JSX.Element;
    mergeCells: (props: ToolProps) => JSX.Element;
    cellBackgroundColor: typeof CellBackgroundColor;
    cellBorderColor: typeof CellBorderColor;
    cellTextColor: typeof CellTextColor;
    cellBorderWidth: typeof CellBorderWidth;
    insertRowAbove: (props: ToolProps) => JSX.Element;
    insertRowBelow: (props: ToolProps) => JSX.Element;
    moveRowUp: (props: ToolProps) => JSX.Element;
    moveRowDown: (props: ToolProps) => JSX.Element;
    deleteRow: (props: ToolProps) => JSX.Element;
    deleteTable: (props: ToolProps) => JSX.Element;
};
export declare function findTool(id: ToolId): React.FunctionComponent<ToolProps>;
export {};
